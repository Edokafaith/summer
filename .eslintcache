[{"C:\\Users\\OGOYI\\Summer\\src\\index.js":"1","C:\\Users\\OGOYI\\Summer\\src\\App.js":"2","C:\\Users\\OGOYI\\Summer\\src\\reportWebVitals.js":"3","C:\\Users\\OGOYI\\Summer\\src\\components\\Events.js":"4","C:\\Users\\OGOYI\\Summer\\src\\components\\NewEvent.js":"5","C:\\Users\\OGOYI\\Summer\\src\\components\\Navbar.js":"6"},{"size":480,"mtime":1645619425382,"results":"7","hashOfConfig":"8"},{"size":4694,"mtime":1657026084164,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1645619164806,"results":"10","hashOfConfig":"8"},{"size":1496,"mtime":1657026520251,"results":"11","hashOfConfig":"8"},{"size":1360,"mtime":1656915405395,"results":"12","hashOfConfig":"8"},{"size":838,"mtime":1656913945997,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1xlor69",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\OGOYI\\Summer\\src\\index.js",[],["29","30"],"C:\\Users\\OGOYI\\Summer\\src\\App.js",["31","32","33"],"import './App.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\n\r\n\r\n\r\n\r\nimport Web3 from \"web3\";\r\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport IERC from \"./contract/IERC.abi.json\";\r\nimport Summer from  './contract/Summer.abi.json';\r\nimport Events from './components/Events';\r\nimport NewEvent from './components/NewEvent';\r\n\r\n\r\nconst ERC20_DECIMALS = 18;\r\n\r\n\r\nconst contractAddress = \"0x66d72b857FBF850f3486aB4421DB21841655d2b9\";\r\nconst cUSDContractAddress = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\";\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [contract, setcontract] = useState(null);\r\n  const [address, setAddress] = useState(null);\r\n  const [kit, setKit] = useState(null);\r\n  const [cUSDBalance, setcUSDBalance] = useState(0);\r\n  const [events, setEvents] = useState([]);\r\n\r\n  const connectToWallet = async () => {\r\n    if (window.celo) {\r\n      try {\r\n        await window.celo.enable();\r\n        const web3 = new Web3(window.celo);\r\n        let kit = newKitFromWeb3(web3);\r\n\r\n        const accounts = await kit.web3.eth.getAccounts();\r\n        const user_address = accounts[0];\r\n\r\n        kit.defaultAccount = user_address;\r\n\r\n        await setAddress(user_address);\r\n        await setKit(kit);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      console.log(\"Error Occurred\");\r\n      \r\n     }\r\n   };\r\n \r\n    \r\n   const getBalance = (async () => {\r\n    try {\r\n      const balance = await kit.getTotalBalance(address);\r\n      const USDBalance = balance.cUSD.shiftedBy(-ERC20_DECIMALS).toFixed(2);\r\n      const contract = new kit.web3.eth.Contract(Summer, contractAddress);\r\n      setcontract(contract);\r\n      setcUSDBalance(USDBalance);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  });\r\n\r\n \r\n   \r\n   const getEvent =  async () => {\r\n     const eventsLength = await contract.methods.geteventsLength().call();\r\n     console.log(eventsLength);\r\n     const _eventt = []\r\n     for (let index = 0; index < eventsLength; index++) {\r\n       console.log(eventsLength);\r\n       let _events = new Promise(async (resolve, reject) => {\r\n       let event = await contract.methods.getEvent(index).call();\r\n\r\n       resolve({\r\n        index: index,\r\n        owner: event[0],\r\n        image: event[1],\r\n        theme: event[2],\r\n         venue: event[3],\r\n         Price: event[4],\r\n       interested: event[5]\r\n       \r\n                 \r\n      });\r\n    });\r\n    _eventt.push(_events);\r\n  }\r\n  const _events = await Promise.all(_eventt);\r\n  setEvents(_events);\r\n  console.log(events)\r\n  \r\n};\r\n\r\n\r\nuseEffect(() => {\r\n  connectToWallet();\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  if (kit && address) {\r\n    getBalance();\r\n   \r\n  }\r\n}, [kit, address]);\r\n\r\nuseEffect(() => {\r\n  if (contract) {\r\n    getEvent();\r\n  }\r\n}, [contract]);  \r\n\r\n\r\nconst addEvent = async (\r\n  _image,\r\n  _theme,\r\n  _venue,\r\n  price\r\n) => {\r\n\r\n  const _price = new BigNumber(price).shiftedBy(ERC20_DECIMALS).toString();\r\n    try {\r\n      await contract.methods\r\n        .addEvent(_image, _theme, _venue, _price)\r\n        .send({ from: address });\r\n       getEvent();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const ChangeVenue = async (_index, _newVenue) => {\r\n    console.log(_index);\r\n    try {\r\n      await contract.methods.ChangeVenue(_index, _newVenue).send({ from: address });\r\n      getEvent();\r\n      getBalance();\r\n    } catch (error) {\r\n     console.log(error);\r\n     alert(\"The Event venue has been changed\")\r\n    }};\r\n\r\n    const interested = async (_index) => {\r\n      try {\r\n        await contract.methods.Interested(_index).send({ from: address });\r\n        getEvent ();\r\n        getBalance();\r\n      } catch (error) {\r\n        alert.log(error);\r\n      }};\r\n\r\n\r\n      \r\n  const bookEvent = async (_index,) => {\r\n    try {\r\n      const cUSDContract = new kit.web3.eth.Contract(IERC, cUSDContractAddress);\r\n    \r\n      \r\n      await cUSDContract.methods\r\n        .approve(contractAddress, events[_index].price)\r\n        .send({ from: address });\r\n      await contract.methods.bookEvent(_index).send({ from: address });\r\n      getEvent();\r\n      getBalance();\r\n    } catch (error) {\r\n      console.log(error)\r\n    }};\r\n\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Navbar balance = {cUSDBalance} />\r\n      <Events events ={events}\r\n      bookEvent = {bookEvent}\r\n      ChangeVenue = {ChangeVenue}\r\n      interested = {interested}\r\n      onlyOwner={address}\r\n       \r\n       \r\n      \r\n       \r\n      />\r\n       <NewEvent addEvent = {addEvent}\r\n       \r\n/>\r\n    </div>\r\n    )\r\n  }\r\n\r\nexport  default App;\r\n","C:\\Users\\OGOYI\\Summer\\src\\reportWebVitals.js",[],"C:\\Users\\OGOYI\\Summer\\src\\components\\Events.js",["34"],"import React from 'react';\r\nimport { useState } from 'react';\r\n\r\n \r\n  \r\n \r\n\r\nconst Events = (props) => {\r\n\r\n  const [newVenue, setnewVenue] = useState('');\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();}\r\n \r\n  return (\r\n    <div className='container'>\r\n    <div className='row'>\r\n\r\n    {props.events.map((summer) => (\r\n<div className='col-4'  key={summer.index}>\r\n<div className='card'>\r\n<img class=\"card-img-top\" src={summer.image} alt=\" img top\"/>\r\n<div className='card-body'>\r\n<h5 className='card-title'>Theme : {summer.theme}</h5>\r\n<p className='card-text'> Venue : {summer.venue}</p>\r\n<h5 className='card-bottom'>Booking Price : {summer.Price / 1000000000000000000} cUSD</h5>\r\n</div>\r\n<div>\r\n{props.onlyOwner !== summer.owner && (\r\n<button type=\"button\" class=\"btn tip btn-outline-primary\" onClick={() => props.bookEvent(summer.index)}>book Event</button>\r\n)}\r\n\r\n{props.onlyOwner !== summer.owner && (\r\n<sm><button onClick={ ()=> props.interested(summer.index)} class=\"btn btn-outline-dark btn-b\">Interested in Event</button></sm>\r\n)}\r\n{props.onlyUser === summer.owner && (\r\n<div><input class=\"form-control form-control-lg\"  onChange={(e) => setnewVenue(e.target.value)} type=\"text\" placeholder=\"Add new Venue\"></input>\r\n               <button class=\"btn btn-primary mb-2\"  onClick={() => props.ChangeVenue(summer.index, newVenue)}>Change Venue</button>\r\n               </div>\r\n)}\r\n</div>\r\n</div>\r\n\r\n</div>\r\n    ))}\r\n    </div>\r\n\r\n    </div>\r\n)}\r\n\r\n\r\n\r\n\r\n\r\nexport default Events;","C:\\Users\\OGOYI\\Summer\\src\\components\\NewEvent.js",[],"C:\\Users\\OGOYI\\Summer\\src\\components\\Navbar.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":4,"column":31,"nodeType":"41","messageId":"42","endLine":4,"endColumn":42},{"ruleId":"43","severity":1,"message":"44","line":112,"column":4,"nodeType":"45","endLine":112,"endColumn":18,"suggestions":"46"},{"ruleId":"43","severity":1,"message":"47","line":118,"column":4,"nodeType":"45","endLine":118,"endColumn":14,"suggestions":"48"},{"ruleId":"39","severity":1,"message":"49","line":11,"column":9,"nodeType":"41","messageId":"42","endLine":11,"endColumn":22},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBalance'. Either include it or remove the dependency array.","ArrayExpression",["52"],"React Hook useEffect has a missing dependency: 'getEvent'. Either include it or remove the dependency array.",["53"],"'submitHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},{"desc":"56","fix":"57"},"Update the dependencies array to be: [kit, address, getBalance]",{"range":"58","text":"59"},"Update the dependencies array to be: [contract, getEvent]",{"range":"60","text":"61"},[2819,2833],"[kit, address, getBalance]",[2902,2912],"[contract, getEvent]"]